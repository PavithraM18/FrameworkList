package leetCode;

import java.util.HashSet;
import java.util.Scanner;

public class LongestSubstring {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//Scanner sc = new Scanner(System.in);
		String str = "abcabcbb";
		System.out.println("Find the length of the longest substring without repeating characters: " +lengthOfLongestSubstring(str));
		
	//	String str = sc.next();
		
	}

	private static int lengthOfLongestSubstring(String s) {
		// TODO Auto-generated method stub
	    HashSet<Character> set = new HashSet<>();
		int maxLength = 0; int left = 0;
		
		for (int right = 0; right<s.length();right++)
		{
			char curChar = s.charAt(right);
			while(set.contains(curChar))
			{
				set.remove( s.charAt(left));
				left++;
			}
			set.add(curChar);
			maxLength = Math.max(maxLength, right-left+1);
					
		}
		return maxLength;
	}

}
