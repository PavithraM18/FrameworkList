package cucumber.stepDefinitions;

import static io.restassured.RestAssured.given;

import java.util.ArrayList;

import cucumber.resources.TestDataBuild;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;
import static org.junit.Assert.*;

import io.restassured.RestAssured;
import io.restassured.builder.RequestSpecBuilder;
import io.restassured.builder.ResponseSpecBuilder;
import io.restassured.http.ContentType;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import io.restassured.specification.RequestSpecification;
import io.restassured.specification.ResponseSpecification;
import pojoClasses.AddPlacePost;
import pojoClasses.Location;

public class StepDefinition {
	RequestSpecification res;
	ResponseSpecification responspec;
	Response response ;
	String responseString;
	TestDataBuild data =  new TestDataBuild();

@Given("Add Place Payload")
public void add_place_payload() {
	RestAssured.baseURI= ("https://rahulshettyacademy.com");
	RequestSpecification req = new RequestSpecBuilder().setBaseUri("https://rahulshettyacademy.com").addQueryParam("key", "qaclick123")
	.setContentType(ContentType.JSON).build();
	responspec = new ResponseSpecBuilder().expectContentType(ContentType.JSON).expectStatusCode(200).build();
	res = given().spec(req).body(data.addPlacePayload());
}

@When("user calls {string} with Post http request")
public void user_calls_with_post_http_request(String string) {
	response = res.when().post("/maps/api/place/add/json").then().spec(responspec).extract().response();
}

@Then("the API call is success with status code {int}")
public void the_api_call_is_success_with_status_code(Integer int1) {
	assertEquals(response.getStatusCode(), 200);
}
@Then("{string} in response body is {string}")
public void in_response_body_is(String keyValue, String exceptedValue) {
	responseString = response.asString();
	JsonPath js = new JsonPath(responseString);
	 String actucalValue = js.get(keyValue).toString();
	assertEquals(actucalValue,exceptedValue);
}
}
