package leetCode;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;

public class TwoSumWithSubarray {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] nums = {1,2,3,4,2,5,3,1,1,2} ;
		int target = 5;
		
		System.out.println(findContinousSubArray(nums, target));
	}
		public static List<Integer> findContinousSubArray(int[] nums, int target) {

			List<List<Integer>> result = new ArrayList<>();
		       HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
		       int sum = 0;
		       for (int i = 0; i < nums.length; i++) {
		            sum += nums[i];

		            if (sum == target) {
		                result.add(Arrays.asList(nums, i));
		            }

		            if (map.containsKey(sum - target)) {
		                int start = map.get(sum - target) + 1;
		                result.add(Arrays.asList(nums, start, i));
		            }

		            map.put(sum, i);
		        }
			return a;
		      
		}
}
	

